name: Pandoc Arm

on: [push]

jobs:

  armv7l-cabal-ghc865:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Check Docker Version
      run: docker --version
    - name: Install Latest Docker
      run: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu  $(lsb_release -cs)  stable"
        sudo apt-get update
        sudo apt-get install docker-ce
    - name: Check Docker Version
      run: docker --version
    - name: build
      run: docker run --privileged -v $(pwd):/drone/src ann17/pandoc-ghc-arm:cabal-ghc8.6.5 /drone/src/cabal/chroot.sh arm
    - uses: actions/upload-artifact@master
      with:
        name: pandoc-${GITHUB_REF}-armv7l
        path: bin
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false      
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./bin/*.xz
        asset_content_type: application/gzip

  aarch64-cabal-ghc865:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Check Docker Version
      run: docker --version
    - name: Install Latest Docker
      run: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu  $(lsb_release -cs)  stable"
        sudo apt-get update
        sudo apt-get install docker-ce
    - name: Check Docker Version
      run: docker --version
    - name: build
      run: docker run --privileged -v $(pwd):/drone/src ann17/pandoc-ghc-aarch64:cabal-ghc8.6.5 /drone/src/cabal/chroot.sh
    - uses: actions/upload-artifact@master
      with:
        name: pandoc-${GITHUB_REF}-aarch64
        path: bin
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false      
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./bin/*.xz
        asset_content_type: application/gzip

  armv7l-stack-ghc863:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Check Docker Version
      run: docker --version
    - name: Install Latest Docker
      run: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu  $(lsb_release -cs)  stable"
        sudo apt-get update
        sudo apt-get install docker-ce
    - name: Check Docker Version
      run: docker --version
    - name: build
      run: docker run --privileged -v $(pwd):/drone/src ann17/pandoc-ghc-arm:stack-ghc8.6.3 /drone/src/stack/chroot.sh arm
    - uses: actions/upload-artifact@master
      with:
        name: pandoc-${GITHUB_REF}-armv7l-stack
        path: bin
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false      
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./bin/*.xz
        asset_content_type: application/gzip

  aarch64-stack-ghc862:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Check Docker Version
      run: docker --version
    - name: Install Latest Docker
      run: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu  $(lsb_release -cs)  stable"
        sudo apt-get update
        sudo apt-get install docker-ce
    - name: Check Docker Version
      run: docker --version
    - name: build
      run: docker run --privileged -v $(pwd):/drone/src ann17/pandoc-ghc-aarch64:stack-ghc8.6.2 /drone/src/stack/chroot.sh
    - uses: actions/upload-artifact@master
      with:
        name: pandoc-${GITHUB_REF}-aarch64-stack
        path: bin
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false      
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./bin/*.xz
        asset_content_type: application/gzip

  aarch64-alpinestack-ghc862:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Check Docker Version
      run: docker --version
    - name: Install Latest Docker
      run: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu  $(lsb_release -cs)  stable"
        sudo apt-get update
        sudo apt-get install docker-ce
    - name: Check Docker Version
      run: docker --version
    - name: build
      run: docker run --privileged -v $(pwd):/drone/src ann17/pandoc-ghc-aarch64:alpinestack-ghc8.6.2 /drone/src/alpine-stack/chroot.sh
    - uses: actions/upload-artifact@master
      with:
        name: pandoc-${GITHUB_REF}-aarch64-alpinestack
        path: bin
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false      
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./bin/*.xz
        asset_content_type: application/gzip
